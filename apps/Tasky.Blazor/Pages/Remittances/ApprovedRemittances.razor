@page "/approvedremittances"
@using Tasky.CustomerService.Customers;
@using Tasky.CustomerService.Customers.Dtos;
@using Tasky.Microservice.Shared.Dtos;
@using Tasky.RemittanceService.Localization;
@using Tasky.RemittanceService.Remittances;
@using Volo.Abp.AspNetCore.Components
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Web
@using Volo.Abp.Application.Dtos
@using Microsoft.AspNetCore.Components.Forms
@using Volo.Abp.Domain.Entities
@using Blazorise
@using Microsoft.JSInterop
@using Microsoft.Extensions.Localization
@using Volo.Abp.DependencyInjection
@using static Tasky.Microservice.Shared.Enums.Enums;
@inherits TaskyComponentBase
@attribute [Dependency(ReplaceServices = true)]
@inject AbpBlazorMessageLocalizerHelper<RemittanceServiceResource> LH
@inject IStringLocalizer<RemittanceServiceResource> L
@inject IRemittanceAppService RemittanceAppService
@inject ICustomerAppService CustomerAppService
@inject NavigationManager NavigationManager

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["ApprovedRemittances"]</h2>
            </Column>

        </Row>
    </CardHeader>

    <CardBody>
        <DataGrid TItem="RemittanceDto"
                  Data="RemittanceList"
                  Filterable
                  FilterMethod="DataGridFilterMethod.StartsWith"
                  Responsive
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize"
                  Sortable="true">

            <DataGridColumns>
                <DataGridColumn Width="150px"
                                TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.Id)"
                                Sortable="true"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>
                         
                                    <DropdownItem Clicked="() =>OpenReleaseRemittanceModal(context)">
                                        @L["Release"]
                                    </DropdownItem>
                                
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
                 <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.SerialNumber)"
                                Caption="@L["SerialNumber"]"></DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.Amount)"
                                Caption="@L["Amount"]"></DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.TotalAmount)"
                                Caption="@L["TotalAmount"]"></DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.ReceiverFullName)"
                                Caption="@L["ReceiverFullName"]"></DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.CurrencyName)"
                                Caption="@L["Currency"]"></DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.SenderName)"
                                Caption="@L["SenderName"]"></DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.CreationTime)"
                                Caption="@L["CreationTime"]">
                    <DisplayTemplate>
                        @context.CreationTime.ToString()
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.State)"
                                Caption="@L["State"]">
                    <DisplayTemplate>

                        @L[$"Enum:Remittance_Status:{(int)context.State}"]
                    </DisplayTemplate>
                </DataGridColumn>
                             <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.StatusDate)"
                                Caption="@L["StatusDate"]">
                    <DisplayTemplate>
                        @context.StatusDate.ToString()
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="ReleaseRemittanceModal">
      <ModalContent>
        <Form>
            <ModalHeader>
                <ModalTitle>@L["ReleaseRemittance"],@L["SerialNumber"]:@EditingRemittance.SerialNumber</ModalTitle>
                        <CloseButton Clicked="CloseReleaseRemittanceModal" />
                    </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingRemittance" ValidateOnLoad="false">
                     <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Amount"]</FieldLabel>
                            <NumericEdit TValue="double" @bind-Value="@EditingRemittance.Amount" Disabled>
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                          </Validation>
                    <Field>
                        <FieldLabel>@L["SenderBy"]</FieldLabel>
                        <TextEdit @bind-value="@EditingRemittance.SenderName" Disabled />
                        <TextEdit hidden @bind-value="@EditingRemittance.SenderBy">
                        </TextEdit>
                    </Field>
                     <Field>
                        <FieldLabel>@L["ReceiverBy"]</FieldLabel>
                        <TextEdit @bind-value="@EditingRemittance.ReceiverName" Placeholder="Please choose Receiver Customer" Disabled ></TextEdit>
                        <TextEdit hidden @bind-value="@EditingRemittance.ReceiverBy">
                        </TextEdit>
                        <Button Color="Color.Primary" Clicked="OpenCreateSearchCustomerModalForReleaser">.....</Button>
                    </Field>
                        <Field>
                            <FieldLabel>@L["Type"]</FieldLabel>
                            <Select TValue="RemittanceType" @bind-SelectedValue="@EditingRemittance.Type" Disabled>
                                @foreach (int RemittanceTypeValue in Enum.GetValues(typeof(RemittanceType)))
                                {
                                        <SelectItem TValue="RemittanceType" Value="@((RemittanceType) RemittanceTypeValue)">
                                        @L[$"Enum:RemittanceType:{RemittanceTypeValue}"]
                                        </SelectItem>
                                }
                            </Select>
                        </Field>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Currency"]</FieldLabel>

                            <Select TValue="Guid" @bind-SelectedValue="@EditingRemittance.CurrencyId" Disabled>
                                @foreach (var currency in currencyList)
                                {
                                            <SelectItem TValue="Guid" Value="@currency.Id">
                                        @currency.Name
                                            </SelectItem>
                                }
                                             </Select>

                        </Field>

                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["ReceiverFullName"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingRemittance.ReceiverFullName" Disabled>

                            </TextEdit>
                        </Field>
                    </Validation>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseReleaseRemittanceModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="() =>UpdateRemittanceToReleaseAsync(EditingRemittanceId,EditingRemittance)">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="CreateSearchCustomerModal">

    <ModalHeader>

        <ModalTitle>@L["Customers"]</ModalTitle>
        <CloseButton Clicked="CloseCreateSearchCustomerModal" />
    </ModalHeader>
    <ModalContent>

        <Form>

            <DataGrid TItem="CustomerDto"
                      Data="CustomerList"
                      ReadData="OnDataGridCustomersReadAsync"
                      Filterable
                      FilterMethod="DataGridFilterMethod.StartsWith"
                      Responsive
                      TotalItems="TotalCount"
                      ShowPager="true"
                      PageSize="PageSize">
                <DataGridColumns>
                    <DataGridColumn Width="150px"
                                    TItem="CustomerDto"
                                    Field="@nameof(CustomerDto.Id)"
                                    Sortable="true"
                                    Caption="@L["Actions"]">
                        <DisplayTemplate>
                            <Dropdown>
                                <DropdownToggle Color="Color.Success">
                                    @L["Actions"]
                                </DropdownToggle>
                                <DropdownMenu>
                                    <DropdownItem Clicked="
                         () =>PassCustomer(context,NewRemittance,EditingRemittance)">
                                        @L["Pass"]
                                    </DropdownItem>



                                </DropdownMenu>
                            </Dropdown>
                        </DisplayTemplate>
                    </DataGridColumn>

                    <DataGridColumn TItem="CustomerDto"
                                    Field="@nameof(CustomerDto.FirstName)"
                                    Caption="@L["FirstName"]"></DataGridColumn>
                    <DataGridColumn TItem="CustomerDto"
                                    Field="@nameof(CustomerDto.LastName)"
                                    Caption="@L["LastName"]">

                    </DataGridColumn>
                    <DataGridColumn TItem="CustomerDto"
                                    Field="@nameof(CustomerDto.FatherName)"
                                    Caption="@L["FatherName"]">

                    </DataGridColumn>
                    <DataGridColumn TItem="CustomerDto"
                                    Field="@nameof(CustomerDto.MotherName)"
                                    Caption="@L["MotherName"]">

                    </DataGridColumn>
                </DataGridColumns>
            </DataGrid>

            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateSearchCustomerModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Clicked="OpenCreateCustomerModal">
                    @L["NewCustomer"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>

</Modal>
<Modal @ref="CreateCustomerModal" >
    <ModalContent >
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewCustomer"]</ModalTitle>
                <CloseButton Clicked="CloseCreateCustomerModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateCustomerValidationsRef" Model="@NewCustomer" ValidateOnLoad="false">


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["FirstName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewCustomer.FirstName">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["LastName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewCustomer.LastName">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["FatherName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewCustomer.FatherName">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["MotherName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewCustomer.MotherName">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["BirthDate"]</FieldLabel>
                            <DatePicker @bind-Date="@NewCustomer.BirthDate">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </DatePicker>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Phone"]</FieldLabel>
                            <TextEdit @bind-Text="@NewCustomer.Phone">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Address"]</FieldLabel>
                            <TextEdit @bind-Text="@NewCustomer.Address">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Gender"]</FieldLabel>
                            <Select TValue="Gender" @bind-SelectedValue="@NewCustomer.Gender">
                                <SelectItem TValue="Guid" Value="Guid.Empty">@L["What's your Gender"]</SelectItem>
                                @foreach (int GenderValue in Enum.GetValues(typeof(Gender)))
                                {
                                        <SelectItem TValue="Gender" Value="@((Gender) GenderValue)">
                                        @L[$"Enum:Gender:{GenderValue}"]
                                        </SelectItem>
                                }
                            </Select>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateCustomerModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateCustomerAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>